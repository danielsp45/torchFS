#!/usr/bin/env bash
set -Eeuo pipefail

# Determine the directory of the script and move to the project root.
BASE_DIR=$(dirname "${BASH_SOURCE[0]:-$0}")
cd "${BASE_DIR}/.." || exit 127

function display_help() {
  cat <<EOF
Usage: $(basename "$0") [options]

This script builds the C++ project by creating (if necessary) and entering the build directory,
running "cmake .." to configure the project, and then "cmake --build ." to build the project.

Options:
  -h, --help      Show this help message.
EOF
}

if [[ "${1:-}" == "-h" || "${1:-}" == "--help" ]]; then
  display_help
  exit 0
fi

BUILD_DIR="build"

if [[ ! -d "${BUILD_DIR}" ]]; then
  echo "Creating build directory: ${BUILD_DIR}"
  mkdir "${BUILD_DIR}"
fi

cd "${BUILD_DIR}" || exit 127

VCPKG_TOOLCHAIN_FILE="/home/gsd/vcpkg/scripts/buildsystems/vcpkg.cmake"

echo "Running cmake with vcpkg: cmake -DCMAKE_TOOLCHAIN_FILE=${VCPKG_TOOLCHAIN_FILE} -DVCPKG_MANIFEST_MODE=enabled .."
cmake -DCMAKE_TOOLCHAIN_FILE="${VCPKG_TOOLCHAIN_FILE}" -DVCPKG_MANIFEST_MODE=enabled .. || { echo "cmake configuration failed"; exit 1; }


echo "Building project using a single job to reduce memory usage..."
cmake --build . || { echo "Build failed"; exit 1; }

echo "Build completed successfully."